#!/bin/bash

#projet lo14

erreur_saisie()
{
    echo "mauvais argument(s) pour tacheron"
    echo "help pour plus d'information"
    exit 0
}

erreur_fichier_inexistant()
{
    echo "le fichier $1 est inexistant"
    exit 0
}

help_user()
{
    echo "user - specifie un utilisateur particulier"
    echo "--user [USER_NAME]"
    echo "-u [USER_NAME]"
}

help_affiche()
{
    echo "aff - affiche le fichier tacherontab"
    echo "--aff"
    echo "-l" 
}

help_remove()
{
    echo "rem - efface le fichier tacherontab"
    echo "--rem"
    echo "-r" 
}

help_edite()
{
    echo "edit - édite le fichier tacherontab dans vi"
    echo "--edit"
    echo "-e"
}

help_suppr()
{
    echo "dell - supprime tous les fichiers dans etc et var"
    echo "--dell"
    echo "-d"
}


help()
{
    echo "NAME"
    echo "Tacheron - planifier des taches"
    echo "SYNOPSIS"
    echo "tacheron [OPTION] [COMMANDE]"
    echo "DESCRIPTION"
    help_user()
    help_affiche()
    help_remove()
    help_edite()
    help_edite()
    echo "Planifier une tache"
    echo "[SECONDE][MINUTE][HEURES][JOUR DU MOIS][MOIS DE L'ANNEE][JOUR DE LA SEMAINE][COMMANDE]"
}

verifier_tacherontab()
{
    if [ -d $1 ]
    then
        return true
    else
        return false
    fi
}

#seul le root peut initialiser la commmande
#vérifier que les répertoire existe
#si oui alors fin de l'initialisation
#sinon 
#création au bon endroit
#donner tous les droits au root et adapter les droits pour les autres utilisateurs
initialisation()
{
    if [ "$UID" -ne "0" ]
    then
        echo "L'initialisation de la commande doit être effectuée par le root"
        exit 1
    else
        if [ ! -d /etc/tacheron ]; #verification si le répertoire existe
        then 
            mkdir /etc/tacheron;
            chmod u+rwx,g+r-wx,o+r-wx /etc/tacheron;
            echo "répertoire tacheron créé";
        else
            echo "répertoire tacheron déjà créé";
            exit 0
        fi

        if [ ! -f /etc/tacherontab ]; #vérification si le fichier existe
        then
            touch /etc/tacherontab;
            echo "fichier tacherontab créé";
            chmod u+rwx,g-rwx,o-rwx /etc/tacherontab; #on doit autoriser que le root et les users de tacheron.allow à lire et écrire 
        else
            echo "fichier tacherontab déjà créé";
            exit 0
        fi

        if [ ! -f /etc/tacheron.allow ];
        then    
            touch /etc/tacheron.allow;
            echo "fichier user autorisé créé";
            chmod u+rwx,g-rwx,o-rwx /etc/tacheron.allow;
        else
            echo "fichier tacheron.allow déjà créé";
            exit 0
        fi

        if [ ! -f /etc/tacheron.deny ];
        then
            touch /etc/tacheron.deny;
            echo "fichier user non autorisé créé";
            chmod u+rwx,g-rwx,o-rwx /etc/tacheron.deny;
        else
            echo "fichier user non autorisé déjà créé";
            exit 0
        fi

        if [ ! -f /var/log/tacheron ];
        then
            touch /var/log/tacheron;
            echo "fichier historique créé"
        else
            echo "fichier historique déjà créé";
            exit 0
        fi
    fi
}

suppression()
{
    #permet de faire nos tests et de supprimer l'arborescence en cas de problème
    if [ "$UID" -ne "0" ]
    then
        echo "Vous n'êtes pas identifier en tant que root, suppression impossible"
    else    
        confirm()
        {
            read -r -p "${1} [y/N] " response

            case "$response" in 
                [yY][eE][sS]|[yY])
                    true;;
                *)
                    false;;
            esac
        }

        echo "ATTENTION, vous allez supprimer l'arborescence du projet"
        if confirm "Supprimer ? yes or no";
        then
            rm -r /etc/tacheron;
            rm /etc/tacherontab;
            rm /etc/tacheron.allow;
            rm /etc/tacheron.deny;
            rm /var/log/tacheron;
            echo "Suppression de l'arborescence effectuée"
        else    
            echo "Vous avez annulé la suppression";
        fi
    fi
}

if [ $# -eq 1 ]
then 
    if [ $1 = "help" ]
    then
        help 
    elif [ $1 = "-l" ] || [ $1 = "--aff" ]
    then
        if verifier_tacherontab "/etc/tacherontab"
        then
            cat  /etc/tacherontab
        else
            erreur_fichier_inexistant "/etc/tacherontab"
        fi
    elif [ $1 = "-r" ] || [ $1 = "--rem" ]
    then
        if verifier_tacherontab "/etc/tacherontab"
        then
            rm  /etc/tacherontab
        else
            erreur_fichier_inexistant "/etc/tacherontab"
        fi
    elif [ $1 = "-e"  ] || [ $1 = "--edit" ]
    then
        if verifier_tacherontab "/etc/tacherontab"
        then
            vi  /etc/tacherontab
        else
            erreur_fichier_inexistant "/etc/tacherontab"
        fi
    elif [ $1 = "-d"  ] || [ $1 = "--dell" ]
    then
        suppression
    else
        erreur_saisie
    fi  
elif [ $# -eq 2 ]
then
    if [ $1 = "help" ]
    then
        if [ $2 = "-l" ] || [ $2 = "--aff" ]
        then
            help_affiche
        elif [ $2 = "-e" ] || [ $2 = "--edit" ]
        then 
            help_edite
        elif [ $2 = "-r" ] || [ $2 = "--rem" ]
            help_remove
        elif [ $2 = "-d" ] || [ $2 = "--dell" ]
        then 
            help_suppr
        else
            erreur_saisie
        fi
    else
       erreur_saisie
    fi
elif [ $# -eq 3 ]
then
    if [ $1 = "--user" ] || [ $1 = "-u" ]
    then
        cat /etc/passwd | cut -d ":" -f 1 > temp
        userTemp = grep -c ^$2$ temp

        if [ $userTemp -eq 1 ]
        then 
            if [ $1 = "-l" ] || [ $1 = "--aff" ]
            then
                if verifier_tacherontab "/etc/tacherontab$2"
                then
                    cat  /etc/tacherontab
                else
                    erreur_fichier_inexistant "/etc/tacherontab$2"
                fi
            elif [ $1 = "-r" ] || [ $1 = "--rem" ]
            then
                if verifier_tacherontab "/etc/tacherontab$2"
                then
                    rm  /etc/tacherontab
                else
                    erreur_fichier_inexistant "/etc/tacherontab$2"
                fi
            elif [ $1 = "-e"  ] || [ $1 = "--edit" ]
            then
                if verifier_tacherontab "/etc/tacherontab$2"
                then
                    vi  /etc/tacherontab
                else
                    erreur_fichier_inexistant "/etc/tacherontab$2"
                fi
            else
                erreur_saisie
            fi
        else
           erreur_saisie
        fi
    else
        erreur_saisie
    fi
elif [ $# -ge 7 ]
then
    
else
   erreur_saisie
fi 


